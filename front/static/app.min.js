var e=[{path:"/",component:{props:["state"],data(){return{username:this.$getCookie("username")||"Random Guy #"+(Math.floor(9e5*Math.random())+1e5).toString(16)}},methods:{join(){this.$socket.emit("join-queue",{username:this.username},{queen:{axes:[{x:0,y:-1},{x:-1,y:-1},{x:-1,y:0},{x:-1,y:1}],spawns:["a1","d4"],fields:[{x:2,y:3}]},king:{royal:!0,axes:[],fields:[{x:0,y:1},{x:1,y:1},{x:1,y:0},{x:1,y:-1},{x:0,y:-1},{x:-1,y:-1},{x:-1,y:0},{x:-1,y:1}],spawns:["a4"]}})},quit(){this.$socket.emit("quit-queue")},pieces(){this.$router.push("pieces")}},watch:{username(e,t){this.$setCookie("username",e)}},template:`
        <div id="menu">
            <div class="center" v-if="state === 'waiting'">
                in queue
                <button @click="quit">Leave</button>
            </div>
            <div v-else>
                <input type="text" v-model="username" />
                <button @click="join">Play</button>
                <button @click="pieces">Set Up</button>
            </div>
        </div>
    `}},{path:"/online",component:{components:{square:{props:["n","config","sets","pieces","moves","history","start"],computed:{code(){let e=this.$props.n%8+1,t=Math.floor(this.$props.n/8)+1;return this.$props.config.color?t+=8-2*t+1:e+=8-2*e+1,[,"a","b","c","d","e","f","g","h"][e]+t},color(){return([,"a","b","c","d","e","f","g","h"].indexOf(this.code[0])+parseInt(this.code[1]))%2}},template:`
        <div 
            :class="'square-' + (color ? 'primary' : 'secondary') + (history.includes(code) ? '-v' : '')"
         
            @click="() => { this.$emit('square-click', code); }"
            @mouseenter="() => { this.$emit('square-enter', code); }"
        >
         
            {{ code }}
            <div v-if="moves.includes(code)" :class="'dot' + (pieces[code] ? '-piece' : '') + (start ? '-primary' : '-secondary')"></div>
            <img 
                v-if="pieces[code]"
                
                :src="sets[pieces[code].set].src"
                :alt="pieces[code].name"

                class="piece"
                
                :style="
                    'cursor:' + (pieces[code].set === config.i ? 'pointer' : 'defualt')
                "
            />
        </div>
    `}},props:["state","config","pieces","sets"],data(){return{gameState:["in-progress"],turn:!1,history:[],start:null,moves:[]}},methods:{getPossibleMoves(e){const t=[,"a","b","c","d","e","f","g","h"];var s=this.$props.pieces[e];if(s){const a=[],u=t.indexOf(e[0]),p=+e[1];var i=s.set===this.config.i?this.config.color:!this.config.color;for(const h of this.sets[s.set][s.name].axes)for(let e=1;e<=8;e++){var o=e*h.x*(i?1:-1)+u,n=e*h.y*(i?1:-1)+p;if(0<o&&o<=8&&0<n&&n<=8){o=t[o]+n;if(this.pieces[o]){this.pieces[o].set!==s.set&&a.push(o);break}a.push(o)}}for(const l of this.sets[s.set][s.name].fields){var r=l.x*(i?1:-1)+u,c=l.y*(i?1:-1)+p;if(0<r&&r<=8&&0<c&&c<=8){r=t[r]+c;if(this.pieces[r]?.set===s.set)break;a.push(r)}}return a}},onSquareClick(e){if("in-progress"==this.gameState[0]&&this.turn){var t=this.$props.pieces[e];if(null===this.start)return!t||t.set!==this.$props.config.i?void 0:(this.start=e,void(this.moves=this.getPossibleMoves(e)));this.moves.includes(e)&&this.$socket.emit("move",this.start+e),this.start=null,this.moves=[]}},onSquareEnter(e){null===this.start&&(this.pieces[e]?this.moves=this.getPossibleMoves(e):this.moves=[])},onMove(e){this.turn=!this.turn,this.history=[e[0]+e[1],e[2]+e[3]]},onWin(e){this.gameState=["won",e]},onLose(e){this.gameState=["lost",e]}},computed:{resultMessage(){if("lost"===this.gameState[0])return"You lose =(";let e="";return"disconnect"===this.gameState[1]?e="Your opponent lost connection. ":"forfeit"===this.gameState[1]&&(e="Your opponent forfeit. "),e+"You WIN!"}},beforeMount(){if("playing"!==this.$props.state)return this.$router.push("/");this.$socket.on("move",this.onMove),this.$socket.on("win",this.onWin),this.$socket.on("lose",this.onLose),this.turn=this.$props.config.color,console.log(this.turn)},beforeUnmount(){this.$socket.off("move",this.onMove),this.$socket.off("win",this.onWin),this.$socket.off("lose",this.onLose)},template:`
        
        <div id="online">
            <div v-if="gameState[0] !== 'in-progress'" id="result">
                <p> 
                    {{ resultMessage }}
                </p>

                <input type="button" value="Return To Menu" @click="$router.push('/')" />
                <input type="button" value="Hidde">
            </div>

            <input type="button" value="forfeit" @click="() => $socket.emit('forfeit')" />
        
            <div id="squares">
                <square 
                    v-for="n in 64" :key="n" 
                    
                    @square-click="onSquareClick"
                    @square-enter="onSquareEnter"

                    :n="n - 1" 
                
                    :config="config" 

                    :sets="sets" 
                    :pieces="pieces" 

                    :moves="moves"

                    :history="history"

                    :start="start"
                />
            </div>
        </div>
    `}},{path:"/pieces",component:{components:{setupSquare:{template:""}},template:`
        <div id="squares">
            <setupSquare 
                v-for="n in 64" :key="n" 
                
                :n="n - 1" 
            />
        </div>`}}],e=VueRouter.createRouter({history:VueRouter.createWebHistory(),routes:e});const t=Vue.createApp({methods:{},data(){return{state:"",config:!1,sets:[],pieces:[]}},beforeCreate(){this.$socket.on("join-queue",()=>{this.state="waiting"}),this.$socket.on("quit-queue",()=>{this.state=""}),this.$socket.on("move",e=>{var t=e[0]+e[1],e=e[2]+e[3];this.pieces[e]=this.pieces[t],delete this.pieces[t]}),this.$socket.on("disconnect",()=>{this.$router.push("/disconnect")}),this.$socket.on("start-game",(e,t,s)=>{this.config=e,this.sets=t,this.pieces=s,this.state="playing",this.$router.push("/online")})}});t.config.globalProperties.$socket=io(),t.config.globalProperties.$getCookie=e=>JSON.parse(document.cookie.match("(^|;)\\s*"+e+"\\s*=\\s*([^;]+)")?.pop()||""),t.config.globalProperties.$setCookie=(e,t)=>{document.cookie=`${e}=${JSON.stringify(t)}; max-age=31536000; path=/`},t.config.globalProperties.$set={},t.config.globalProperties.$setup={},t.use(e),t.mount("#app");